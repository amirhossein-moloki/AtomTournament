# Generated by Django 5.2.4 on 2025-07-16 05:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tournaments", "0001_initial"),
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="match",
            name="participant1_team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches_as_participant1",
                to="users.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="participant1_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches_as_participant1",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="participant2_team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches_as_participant2",
                to="users.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="participant2_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches_as_participant2",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="winner_team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="won_matches",
                to="users.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="winner_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="won_matches",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="participant",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="game",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tournaments.game"
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="participants",
            field=models.ManyToManyField(
                blank=True,
                related_name="tournaments",
                through="tournaments.Participant",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tournament",
            name="teams",
            field=models.ManyToManyField(
                blank=True, related_name="tournaments", to="users.team"
            ),
        ),
        migrations.AddField(
            model_name="participant",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tournaments.tournament"
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches",
                to="tournaments.tournament",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="participant",
            unique_together={("user", "tournament")},
        ),
    ]
